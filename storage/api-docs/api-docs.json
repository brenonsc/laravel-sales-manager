{
    "openapi": "3.0.0",
    "info": {
        "title": "Sales Manager API",
        "description": "This API manages sales operations, including consulting, creating, updating, and deleting clients and products, as well as querying sales data.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://0.0.0.0:8000"
        }
    ],
    "paths": {
        "/api/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a User",
                "operationId": "7e21f43155c4b9f9bfb7143d38a8554e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate User and return a token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated User",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@email.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-20T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-20T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log the user out (Invalidate the token)",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "List all clients",
                "operationId": "d00d20521584ab5da83e088abb7aded2",
                "responses": {
                    "200": {
                        "description": "List of clients retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "operationId": "f1e86e5b79fedfa6593067977292b13b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "cpf",
                                    "email",
                                    "phone",
                                    "address"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "12345678901"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "janedoe@email.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12991234567"
                                    },
                                    "address": {
                                        "properties": {
                                            "street": {
                                                "type": "string",
                                                "example": "Rua das Flores"
                                            },
                                            "number": {
                                                "type": "string",
                                                "example": "123"
                                            },
                                            "complement": {
                                                "type": "string",
                                                "example": "Apto 101"
                                            },
                                            "neighbourhood": {
                                                "type": "string",
                                                "example": "Centro"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "São Paulo"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "SP"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "01000000"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients/{id}/sales": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all client's sales by date (descending)",
                "operationId": "48dac8f79272d4465be7caf20b11cdd9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client sales retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "Client ID",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "Client name",
                                                    "type": "string"
                                                },
                                                "cpf": {
                                                    "description": "Client CPF",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Client email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "Client phone",
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "description": "Creation timestamp",
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "description": "Update timestamp",
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "sales": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Sale"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients/{id}/sales/{year}/{month}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a client's sales by month and year",
                "operationId": "69dde9dccce110f53ac53db11689e007",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "Month",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client sales retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "Client ID",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "Client name",
                                                    "type": "string"
                                                },
                                                "cpf": {
                                                    "description": "Client CPF",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Client email",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "Client phone",
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "description": "Creation timestamp",
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "description": "Update timestamp",
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "sales": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Sale"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid month or year provided."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients/{id}": {
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a client",
                "operationId": "7d0a5ae9e306858d30e04fc50265d80c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe Updated"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "12345678901"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "janedoe@email.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12991283898"
                                    },
                                    "address": {
                                        "properties": {
                                            "street": {
                                                "type": "string",
                                                "example": "Avenida Paulista"
                                            },
                                            "number": {
                                                "type": "string",
                                                "example": "100"
                                            },
                                            "complement": {
                                                "type": "string",
                                                "example": "Sala 10"
                                            },
                                            "neighbourhood": {
                                                "type": "string",
                                                "example": "Bela Vista"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "São Paulo"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "SP"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "01310000"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client, including its address and sales",
                "operationId": "8720346de08f1e46fe28a2a7179d23c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List active products",
                "description": "Retrieve a list of active products ordered by name.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "List of active products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product with validation and optional deactivation if quantity is zero.",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "sku",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "MacBook Pro"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Apple MacBook Pro with M1 Pro chip, 16GB RAM, 512GB SSD"
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "MBPM1P16512"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1299
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "description": "Retrieve a specific product by its ID.",
                "operationId": "7ab21ddb713501f3d4c2914892c02a21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update the specified product by its ID.",
                "operationId": "6a7e11900844cd85cff66e662b82bd4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "sku",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "MacBook Pro Updated"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Apple MacBook Pro Updated with M1 Pro chip, 16GB RAM, 512GB SSD"
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "MBPM1P16512"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1399
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Soft delete a product",
                "description": "Mark a product as inactive (soft delete).",
                "operationId": "f6c90648962771c8aec7c8aae3d162fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product soft deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product soft deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sales": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get a list of all sales",
                "operationId": "419ebb078c83262b05f7c639ae8b2c21",
                "responses": {
                    "200": {
                        "description": "List of sales retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sale"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Store a new sale",
                "operationId": "51f42c056032d143981f26f6c0888f24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sale executed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale executed successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Product is not available or not enough stock"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "title": "Client",
                "description": "Client model",
                "properties": {
                    "id": {
                        "description": "Client ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Client name",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Client CPF",
                        "type": "string"
                    },
                    "email": {
                        "description": "Client email",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Client phone",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "address": {
                        "properties": {
                            "street": {
                                "description": "Street name",
                                "type": "string"
                            },
                            "number": {
                                "description": "Street number",
                                "type": "string"
                            },
                            "complement": {
                                "description": "Address complement",
                                "type": "string"
                            },
                            "neighbourhood": {
                                "description": "Neighbourhood",
                                "type": "string"
                            },
                            "city": {
                                "description": "City",
                                "type": "string"
                            },
                            "state": {
                                "description": "State",
                                "type": "string"
                            },
                            "postal_code": {
                                "description": "Postal code",
                                "type": "string"
                            },
                            "created_at": {
                                "description": "Creation timestamp",
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "description": "Update timestamp",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Product SKU",
                        "type": "string"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "quantity": {
                        "description": "Product quantity",
                        "type": "integer"
                    },
                    "is_active": {
                        "description": "Product active status",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Sale": {
                "title": "Sale",
                "description": "Sale model",
                "properties": {
                    "id": {
                        "description": "Sale ID",
                        "type": "integer"
                    },
                    "client_id": {
                        "description": "Client ID",
                        "type": "integer"
                    },
                    "product_id": {
                        "description": "Product ID",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Quantity of products sold",
                        "type": "integer"
                    },
                    "unit_price": {
                        "description": "Unit price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "total_price": {
                        "description": "Total price of the sale",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Clients",
            "description": "Clients"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Sales",
            "description": "Sales"
        }
    ]
}